{"version":3,"sources":["webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","webpack://materialui/./lib/select.jsx"],"names":["MenuItem","forwardRef","props","ref","tabIndex","classes","className","_props$component","component","_props$disableGutters","disableGutters","_props$role","role","selected","tabIndexProp","other","disabled","undefined","createElement","button","dense","root","gutters","theme","typography","body1","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","name","ListSubheader","_props$color","color","Component","_props$disableSticky","disableSticky","_props$inset","inset","concat","sticky","lineHeight","listStyle","palette","text","secondary","fontFamily","fontWeight","fontWeightMedium","fontSize","pxToRem","colorPrimary","primary","main","colorInherit","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","useStyles","makeStyles","formControl","margin","spacing","minWidth","withComponentFeatures","groups","options","filter","m","type","defaultValue","length","map","x","value","multiple","Array","isArray","setState","Consumer","onFieldChange","key","id","htmlFor","label","input","onChange","event","target"],"mappings":"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","file":"Select.eadb7186c2ceb7e221f6.bundle.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: {\n      dense: classes.dense\n    },\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { withComponentFeatures } from './universal-dashboard';\r\nimport {FormContext} from './form';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nconst UDSelect = (props) => {\r\n    const classes = useStyles();\r\n    const groups = props.options.filter(m => m.type === 'mu-select-group');\r\n\r\n    const onChange = (event, onFieldChange) => {\r\n        onFieldChange({id: props.id, value : event.target.value})\r\n        props.setState({ value : event.target.value})\r\n\r\n        if (props.onChange) {\r\n            props.onChange(event.target.value);\r\n        }\r\n    }\r\n\r\n    let defaultValue = null;\r\n    let options = [];\r\n    if (groups.length > 0)\r\n    {\r\n        options = groups.map(x => {\r\n            return [\r\n                <ListSubheader>{x.name}</ListSubheader>,\r\n                x.options.map(m => <MenuItem value={m.value}>{m.name}</MenuItem>)\r\n            ]\r\n        })\r\n    }\r\n    else \r\n    {\r\n        defaultValue = props.defaultValue || props.options[0].value;\r\n        options = props.options.map(x => <MenuItem value={x.value}>{x.name}</MenuItem>)\r\n\r\n        if (props.multiple && !Array.isArray(defaultValue)) {\r\n            defaultValue = [defaultValue];\r\n        }\r\n\r\n        if (!props.value) {\r\n            props.setState({value: defaultValue})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContext.Consumer>\r\n            {\r\n                ({onFieldChange}) => (\r\n                    <FormControl className={classes.formControl} key={props.id}>\r\n                        <InputLabel htmlFor={props.id}>{props.label}</InputLabel>\r\n                        <Select \r\n                            defaultValue={defaultValue} \r\n                            input={<Input id={props.id} />} \r\n                            value={props.value} \r\n                            onChange={event => onChange(event, onFieldChange)}\r\n                            multiple={props.multiple}\r\n                        >\r\n                            {options}\r\n                        </Select>\r\n                    </FormControl>\r\n                )\r\n            }\r\n        </FormContext.Consumer>\r\n\r\n    )\r\n}\r\n\r\nexport default withComponentFeatures(UDSelect);"],"sourceRoot":""}