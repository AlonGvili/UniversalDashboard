{"version":3,"sources":["webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/classnames/index.js","webpack://materialui/./lib/icon-button.jsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","UdIconButton","UniversalDashboard","publish","type","eventId","props","id","eventName","eventData","this","className","disabled","style","href","icon","onClick","onClickEvent","renderComponent","React","Component","withStyles","theme","button","margin","spacing","unit"],"mappings":"iGAAA;;;;;GAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIM,KAAOP,EACXP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAChCX,EAAQM,KAAKK,IAMjB,OAAOX,EAAQa,KAAK,KAGgBC,EAAOC,SAC3ChB,EAAWiB,QAAUjB,EACrBe,EAAOC,QAAUhB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,GACP,QAFoB,OAEpB,aAxCH,I,8JCKMkB,E,uPAEW,WACbC,mBAAmBC,QAAQ,gBAAiB,CACxCC,KAAM,cACNC,QAAS,EAAKC,MAAMC,GAAK,UACzBC,UAAW,GACXC,UAAW,Q,wEAIT,MACqDC,KAAKJ,MAA/CK,GADX,EACE3B,QADF,EACW2B,WAAUC,EADrB,EACqBA,SAASL,EAD9B,EAC8BA,GAAGM,EADjC,EACiCA,MAAMC,EADvC,EACuCA,KAAKC,EAD5C,EAC4CA,KAElD,OACM,kBAAC,IAAD,CACEC,QAASN,KAAKO,aACdN,UAAW5B,IAAW4B,EAAW,oBACjCC,SAAUA,EACVL,GAAIA,EACJM,MAAK,eAAMA,GACXC,KAAMA,GAEHZ,mBAAmBgB,gBAAgBH,Q,GAvBvBI,IAAMC,WAiClBC,uBAvCA,SAAAC,GAAK,MAAK,CACvBC,OAAQ,CACNC,OAAQF,EAAMG,QAAQC,SAqCXL,CAAmBpB","file":"IconButton.eadb7186c2ceb7e221f6.bundle.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport classNames from \"classnames\"\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  }\r\n});\r\n\r\nclass UdIconButton extends React.Component {\r\n\r\n  onClickEvent = () => {\r\n    UniversalDashboard.publish('element-event', {\r\n        type: \"clientEvent\",\r\n        eventId: this.props.id + 'onClick',\r\n        eventName: '',\r\n        eventData: ''\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const { classes, className,disabled,id,style,href,icon } = this.props;   \r\n\r\n    return (\r\n          <IconButton \r\n            onClick={this.onClickEvent} \r\n            className={classNames(className, 'ud-mu-iconbutton')}\r\n            disabled={disabled}\r\n            id={id}\r\n            style={{...style}}\r\n            href={href}\r\n          >\r\n              {UniversalDashboard.renderComponent(icon)}\r\n          </IconButton>\r\n    );\r\n  }\r\n}\r\n\r\nUdIconButton.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UdIconButton);"],"sourceRoot":""}