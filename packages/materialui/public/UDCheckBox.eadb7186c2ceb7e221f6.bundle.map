{"version":3,"sources":["webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/classnames/index.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/icons/CheckBoxOutlineBlank.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/icons/CheckBox.js","webpack://materialui/./lib/checkbox.jsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","SwitchBase","forwardRef","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_useControlled","controlled","Boolean","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","createElement","component","root","role","undefined","event","input","newChecked","target","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","forEach","concat","cloneElement","theme","display","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","capitalize","fontSize","withStyles","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","_interopRequireDefault","Object","defineProperty","_react","_default","withComponentFeatures","Consumer","onFieldChange","onFieldChanged","setState","style","render"],"mappings":"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","file":"UDCheckBox.eadb7186c2ceb7e221f6.bundle.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\n\nexports.default = _default;","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\"\r\nimport CheckBoxIconBlank from \"@material-ui/icons/CheckBoxOutlineBlank\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport classNames from \"classnames\";\r\nimport {FormContext} from './form';\r\nimport {withComponentFeatures} from './universal-dashboard';\r\n\r\nconst UDCheckbox = (props) => {\r\n  const onChange = (event, onFieldChanged) => {\r\n    onFieldChanged({id: props.id, value: event.target.checked});\r\n\r\n    props.setState({ checked : event.target.checked})\r\n\r\n    if (props.onChange) {\r\n        props.onChange(event.target.checked)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContext.Consumer>\r\n      {\r\n        ({onFieldChange}) => (\r\n          <FormControlLabel\r\n          disabled={props.disabled}\r\n            control={\r\n              <Checkbox\r\n                id={props.id}\r\n                className={classNames(props.className, \"ud-mu-checkbox\")}\r\n                checked={props.checked}\r\n                onChange={(event) => onChange(event, onFieldChange)}\r\n                value={props.checked}\r\n                style={!props.disabled ? { ...props.style } : {color: null}}\r\n                color=\"default\"\r\n                icon={ props.icon ? props.render(props.icon) : <CheckBoxIconBlank/> }\r\n                checkedIcon={ props.checkedIcon ? props.render(props.checkedIcon) :  <CheckBoxIcon/> }/>\r\n            }\r\n            label={!props.label ? null : props.label}\r\n            labelPlacement={props.labelPlacement}\r\n          />\r\n        )\r\n      }\r\n    </FormContext.Consumer>\r\n\r\n  );\r\n}\r\n\r\nexport default withComponentFeatures(UDCheckbox);"],"sourceRoot":""}