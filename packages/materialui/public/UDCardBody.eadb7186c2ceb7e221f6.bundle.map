{"version":3,"sources":["webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/classnames/index.js","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","webpack://materialui/./lib/card-body.jsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","theme","color","palette","text","primary","typography","body2","backgroundColor","background","common","white","fontWeight","fontWeightBold","margin","name","props","_props$children","children","createElement","Fragment","UDCardBody","content","isEndpoint","UniversalDashboard","get","id","data","error","setState","hasError","loading","onLoadData","this","className","style","refreshInterval","autoRefresh","state","renderComponent","timeout","enabled","callback","React","Component","withStyles","display"],"mappings":"kGAAA;;;;;GAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIM,KAAOP,EACXP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAChCX,EAAQM,KAAKK,IAMjB,OAAOX,EAAQa,KAAK,KAGgBC,EAAOC,SAC3ChB,EAAWiB,QAAUjB,EACrBe,EAAOC,QAAUhB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,GACP,QAFoB,OAEpB,aAxCH,I,iCCPA,yCAKWkB,EAAO,CAChBC,oBAAqB,cAErBC,oBAAqB,YAIrBC,UAAW,cAEFC,EAAO,SAAcC,GAC9B,OAAO,YAAS,CACdC,MAAOD,EAAME,QAAQC,KAAKC,SACzBJ,EAAMK,WAAWC,MAAO,CACzBC,gBAAiBP,EAAME,QAAQM,WAAWd,QAC1C,eAAgB,CAEda,gBAAiBP,EAAME,QAAQO,OAAOC,UA0D7B,iBAtDK,SAAgBV,GAClC,MAAO,CACL,UAAW,CACTL,KAAMA,EACN,yBAA0B,CACxBG,UAAW,WAEb,YAAa,CACXa,WAAYX,EAAMK,WAAWO,gBAE/Bb,KAAM,YAAS,CACbc,OAAQ,GACPd,EAAKC,GAAQ,CAGd,cAAe,CACbO,gBAAiBP,EAAME,QAAQM,WAAWd,eAsClB,CAChCoB,KAAM,kBADO,EA5Bf,SAAqBC,GAEnB,IAAIC,EAAkBD,EAAME,SACxBA,OAA+B,IAApBD,EAA6B,KAAOA,EAInD,OAHcD,EAAMrC,QAGb,IAAMwC,cAAc,IAAMC,SAAU,KAAMF,O,2NC/CtCG,EAAb,+OACU,CACNC,QAAS,EAAKN,MAAMM,UAFxB,yCAKe,WACP,EAAKN,MAAMO,WAMbC,mBAAmBC,IAAnB,0CACqC,EAAKT,MAAMU,KAAM,SAAAC,GACpDA,EAAKC,MACD,EAAKC,SAAS,CAACC,UAAU,EAAKF,MAAOD,EAAKC,MAAMN,QAASK,IACvD,EAAKE,SAAS,CAACP,QAASK,EAAKI,SAAS,OAT9C,EAAKF,SAAS,CACZP,QAAS,EAAKN,MAAMM,aAR5B,iDAsBuB,WACnB,EAAKU,cAvBT,wEA0BW,MASHC,KAAKjB,MAPPkB,EAFK,EAELA,UACAvD,EAHK,EAGLA,QACA+C,EAJK,EAILA,GACAS,EALK,EAKLA,MACAZ,EANK,EAMLA,WACAa,EAPK,EAOLA,gBACAC,EARK,EAQLA,YAGMf,EAAYW,KAAKK,MAAjBhB,QAER,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,MAEA,kBAAC,IAAD,CACEI,GAAIA,EACJQ,UAAWxD,IAAWC,EAAQ2C,QAASY,EAAW,kBAClDC,MAAK,eAAOA,IACXX,mBAAmBe,gBAAgBjB,IAGrCC,EACC,kBAAC,gBAAD,CACEiB,QAA2B,IAAlBJ,EACTK,QAASJ,EACTK,SAAUT,KAAKD,aAAgB,UAtD3C,GAAgCW,IAAMC,WA4DvBC,uBAlEA,iBAAU,CACvBvB,QAAS,CACPwB,QAAS,WAgEED,CAAmBxB","file":"UDCardBody.eadb7186c2ceb7e221f6.bundle.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","import React, { Fragment } from \"react\";\r\nimport { withStyles, CssBaseline, CardContent } from \"@material-ui/core\";\r\nimport classNames from \"classnames\";\r\nimport { ReactInterval } from \"react-interval/lib/Component\";\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    display: \"flex\"\r\n  }\r\n});\r\n\r\nexport class UDCardBody extends React.Component {\r\n  state = {\r\n    content: this.props.content,\r\n  };\r\n\r\n  onLoadData = () => {\r\n    if(!this.props.isEndpoint){\r\n      this.setState({\r\n        content: this.props.content\r\n      })\r\n    }\r\n    else{\r\n      UniversalDashboard.get(\r\n        `/api/internal/component/element/${this.props.id}`, data => {\r\n        data.error ?\r\n            this.setState({hasError: true,error: data.error,content: data,})            \r\n            : this.setState({content: data,loading: false})\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.onLoadData\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      classes,\r\n      id,\r\n      style,\r\n      isEndpoint,\r\n      refreshInterval,\r\n      autoRefresh\r\n    } = this.props;\r\n\r\n    const { content } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <CssBaseline />\r\n\r\n        <CardContent\r\n          id={id}\r\n          className={classNames(classes.content, className, \"ud-mu-cardbody\")}\r\n          style={{ ...style }}>\r\n          {UniversalDashboard.renderComponent(content)}\r\n        </CardContent>\r\n        \r\n        {isEndpoint ? \r\n          <ReactInterval\r\n            timeout={refreshInterval * 1000}\r\n            enabled={autoRefresh}\r\n            callback={this.onLoadData}/> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(UDCardBody);\r\n"],"sourceRoot":""}