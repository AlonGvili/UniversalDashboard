{"version":3,"sources":["webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/classnames/index.js","webpack://materialui/./lib/icon.jsx","webpack://materialui/D:/GPM/github.com/AlonGvili/UniversalDashboard/node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","webpack://materialui/./lib/typography.jsx","webpack://materialui/./lib/card-toolbar.jsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","UDIcon","UniversalDashboard","renderComponent","className","this","props","style","type","React","Component","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","theme","color","palette","text","primary","typography","body2","backgroundColor","background","common","white","fontWeight","fontWeightBold","margin","name","_props$children","children","createElement","Fragment","UdMuTypography","errorMessage","hasError","isEndpoint","content","setState","get","id","data","error","message","eventName","event","onLoadData","prevProps","align","gutterBottom","noWrap","isParagraph","variant","refreshInterval","autoRefresh","state","paragraph","timeout","enabled","callback","UDCardToolBar","title","font","onMinimize","icon","onShowButtons","disableGutters","cardToolBar","onTitle","action","onClick","size","withStyles","display","alignItems","paddingLeft","paddingRight","maxHeight","marginRight","spacing","unit","flex","marginLeft"],"mappings":"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","file":"UDCardToolBar.eadb7186c2ceb7e221f6.bundle.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\r\nimport classNames from \"classnames\"\r\n\r\nexport default class UDIcon extends React.Component {\r\n    render(){\r\n        return UniversalDashboard.renderComponent({\r\n            className: classNames(this.props.className, \"ud-mu-icon\"),\r\n            style: {...this.props.style},\r\n            ...this.props,\r\n            type: 'icon'\r\n        })\r\n    }\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ReactInterval } from \"react-interval/lib/Component\";\r\nimport classNames from \"classnames\"\r\n\r\nexport default class UdMuTypography extends React.Component {\r\n  state = {\r\n    text: \"\",\r\n    errorMessage: \"\",\r\n    hasError: false\r\n  };\r\n\r\n  onLoadData = () => {\r\n    if(!this.props.isEndpoint && this.props.content === null){\r\n        this.setState({\r\n            text: this.props.text\r\n        })\r\n    }\r\n    if(!this.props.isEndpoint && this.props.content !== null){\r\n        this.setState({\r\n            text: this.props.content\r\n        })\r\n    }\r\n    if(this.props.isEndpoint && this.props.content !== null){\r\n        UniversalDashboard.get(\r\n          `/api/internal/component/element/${this.props.id}`,\r\n          data => {\r\n            data.error\r\n              ? this.setState({hasError: true, error: data.error, errorMessage: data.error.message})\r\n              : this.setState({text: data});\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.onLoadData();\r\n  }\r\n\r\n  onIncomingEvent = (eventName, event) => {\r\n    if (event.type === \"syncElement\") {\r\n      this.onLoadData();\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.id !== this.props.id) {\r\n      this.onLoadData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      id,\r\n      classes,\r\n      style,\r\n      align,\r\n      gutterBottom,\r\n      noWrap,\r\n      isParagraph,\r\n      variant,\r\n      refreshInterval,\r\n      isEndpoint,\r\n      autoRefresh\r\n    } = this.props;\r\n    const { text } = this.state;\r\n    return (\r\n      <Typography\r\n        id={id}\r\n        className={classNames(classes, \"ud-mu-typography\")}\r\n        style={style === null ? {} : { ...style }}\r\n        align={align}\r\n        gutterBottom={gutterBottom}\r\n        noWrap={noWrap}\r\n        paragraph={isParagraph}\r\n        variant={variant}\r\n      >\r\n        {text}\r\n        <ReactInterval\r\n          timeout={refreshInterval * 1000}\r\n          enabled={autoRefresh}\r\n          callback={this.onLoadData}\r\n        />\r\n      </Typography>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  CssBaseline,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport classNames from \"classnames\";\r\nimport UdMuTypography from \"./typography\";\r\nimport UdMuIcon from './icon';\r\n\r\nconst styles = theme => ({\r\n  cardToolBar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    maxHeight: 56\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing.unit * 2\r\n  },\r\n  title: {\r\n    flex: \"1 1 auto\",\r\n    marginLeft: theme.spacing.unit * 2,\r\n  },\r\n  action: {\r\n    flex: \"0 0 auto\"\r\n  }\r\n});\r\n\r\nexport class UDCardToolBar extends React.Component {\r\n  \r\n  onTitle = (classes, style, title) => {\r\n    return (\r\n      title.type === 'mu-typography' ?\r\n      <UdMuTypography\r\n        classes={classNames(classes.title,title.className, \"ud-mu-cardtoolbar-title\")}\r\n        {...title}/> \r\n      : <Typography\r\n          variant=\"h6\"\r\n          style={{ color: style.color, font: style.font }}\r\n          className={classNames(classes.title, \"ud-mu-cardtoolbar-title\")}>\r\n          {title}\r\n      </Typography>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      classes,\r\n      onMinimize,\r\n      title,\r\n      icon,\r\n      onShowButtons,\r\n      style,\r\n      content,\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <CssBaseline />\r\n        <Toolbar\r\n          id={id}\r\n          style={{ ...style }}\r\n          disableGutters\r\n          className={classNames(\"ud-mu-cardtoolbar\", classes.cardToolBar)}\r\n        >\r\n          {icon !== null ? (\r\n            <UdMuIcon className=\"ud-mu-cardtoolbar-icon\" {...icon} />\r\n          ) : null}\r\n          {this.onTitle(classes, style, title)}\r\n          {onShowButtons ? (\r\n            <div\r\n              className={classNames(classes.action,\"ud-mu-cardtoolbar\")}>\r\n              <IconButton\r\n                className=\"ud-mu-cardtoolbar-minimize\"\r\n                onClick={onMinimize}>\r\n                <UdMuIcon\r\n                  icon=\"Minus\"\r\n                  size={content === null ? \"xs\" : content[0].icon.size}\r\n                  style={\r\n                    content !== null\r\n                      ? { ...content[0].icon.style }\r\n                      : { color: \"inherit\", backgroundColor: \"transparent\" }\r\n                  }\r\n                />\r\n              </IconButton>\r\n              {UniversalDashboard.renderComponent(content)}\r\n\r\n            </div>\r\n          ) : null}\r\n        </Toolbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(UDCardToolBar);\r\n"],"sourceRoot":""}