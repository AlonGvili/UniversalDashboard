{"version":3,"sources":["webpack://materialui/./lib/tabs.jsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","display","height","tabs","borderRight","divider","TabPanel","props","style","UniversalDashboard","renderComponent","content","UDTabs","classes","React","useState","value","setValue","activeTabPanel","setActiveTabPanel","renderOnClick","tab","dynamic","get","id","data","orientation","tabsClass","key","className","square","indicatorColor","textColor","onChange","event","newValue","map","label","i"],"mappings":"4LAOMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACJC,SAAU,EACVC,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1CC,QAAS,OACTC,OAAQ,KAEVC,KAAM,CACJC,YAAa,aAAF,OAAeV,EAAMI,QAAQO,cAIxCC,EAAW,SAACC,GACd,OACI,yBAAKC,MAAO,CAACP,QAASM,EAAMN,UAAYQ,mBAAmBC,gBAAgBH,EAAMI,WA2D1EC,UAvDA,SAACL,GACZ,IAAMM,EAAUrB,IAERW,EAASI,EAATJ,KAHc,EAIIW,IAAMC,SAAS,GAJnB,mBAIfC,EAJe,KAIRC,EAJQ,OAKsBH,IAAMC,SAAS,IALrC,mBAKfG,EALe,KAKCC,EALD,KAWtB,GAAIZ,EAAMa,eAAiBF,EAAeF,QAAUA,EACpD,CACI,IAAMK,EAAMd,EAAMJ,KAAKa,GACnBK,EAAIC,QAEJb,mBAAmBc,IAAnB,0CAA0DF,EAAIG,KAAM,SAAAC,GAChEN,EAAkB,eAAKE,EAAN,CAAWV,QAASc,EAAMT,cAK/CG,EAAkB,eAAIE,EAAL,CAAUL,WAInC,IAAMrB,EAA6B,aAAtBY,EAAMmB,YAA6Bb,EAAQlB,KAAO,GACzDgC,EAAkC,aAAtBpB,EAAMmB,YAA6Bb,EAAQV,KAAO,GAEpE,OACI,yBAAKqB,GAAIjB,EAAMiB,GAAII,IAAKrB,EAAMiB,GAAIK,UAAWlC,GACzC,kBAAC,IAAD,CAAOmC,QAAM,GACT,kBAAC,IAAD,CACId,MAAOA,EACPe,eAAe,UACfC,UAAU,UACVC,SA7BK,SAACC,EAAOC,GACzBlB,EAASkB,IA6BGT,YAAanB,EAAMmB,YACnBG,UAAWF,GAEVxB,EAAKiC,KAAI,SAAAf,GAAG,OAAI,kBAAC,IAAD,CAAKgB,MAAOhB,EAAIgB,MAAOb,GAAIH,EAAIG,UAIpDjB,EAAMa,cACN,kBAACd,EAAD,eAAUsB,IAAKZ,GAAWE,EAA1B,CAA0CjB,QAAQ,WAClDE,EAAKiC,KAAI,SAACf,EAAKiB,GACX,IAAIrC,EAAUe,GAASsB,EAAI,QAAU,OACrC,OAAO,kBAAChC,EAAD,iBAAce,EAAd,CAAmBpB,QAASA","file":"Tabs.eadb7186c2ceb7e221f6.bundle.js","sourcesContent":["import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.paper,\r\n      display: 'flex',\r\n      height: 224,\r\n    },\r\n    tabs: {\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n  }));\r\n\r\nconst TabPanel = (props) => {\r\n    return (\r\n        <div style={{display: props.display }}>{UniversalDashboard.renderComponent(props.content)}</div>\r\n    )\r\n}\r\n\r\nconst UDTabs = (props) => {  \r\n    const classes = useStyles();\r\n\r\n    const { tabs } = props\r\n    const [value, setValue] = React.useState(0);\r\n    const [activeTabPanel, setActiveTabPanel] = React.useState({});\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    if (props.renderOnClick && activeTabPanel.value !== value)\r\n    {\r\n        const tab = props.tabs[value];\r\n        if (tab.dynamic)\r\n        {\r\n            UniversalDashboard.get(`/api/internal/component/element/${tab.id}`, data => {\r\n                setActiveTabPanel({ ...tab, content: data, value })\r\n            })\r\n        }\r\n        else \r\n        {\r\n            setActiveTabPanel({...tab, value});\r\n        }\r\n    }\r\n\r\n    const root = props.orientation === 'vertical' ? classes.root : \"\";\r\n    const tabsClass = props.orientation === 'vertical' ? classes.tabs : \"\";\r\n\r\n    return (\r\n        <div id={props.id} key={props.id} className={root}>\r\n            <Paper square>\r\n                <Tabs\r\n                    value={value}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={handleChange}\r\n                    orientation={props.orientation}\r\n                    className={tabsClass}\r\n                >\r\n                    {tabs.map(tab => <Tab label={tab.label} id={tab.id}/>)}\r\n                </Tabs>\r\n            </Paper>\r\n            {\r\n                props.renderOnClick ? \r\n                <TabPanel key={value} {...activeTabPanel} display=\"block\"/> :\r\n                tabs.map((tab, i) => {\r\n                    let display = value == i ? \"block\" : \"none\"\r\n                    return <TabPanel {...tab} display={display}/>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UDTabs;"],"sourceRoot":""}